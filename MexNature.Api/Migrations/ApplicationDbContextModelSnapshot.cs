// <auto-generated />
using System;
using MexNature.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MexNature.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MexNature.Api.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Estacionamiento"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Baños"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mirador"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Zona de Comida"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Acceso para Sillas de Ruedas"
                        });
                });

            modelBuilder.Entity("MexNature.Api.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlaceId = 1,
                            Url = "https://images.unsplash.com/photo-1629885375531-157154536544"
                        },
                        new
                        {
                            Id = 2,
                            PlaceId = 2,
                            Url = "https://images.unsplash.com/photo-1579979119561-14bc7423233c"
                        },
                        new
                        {
                            Id = 3,
                            PlaceId = 4,
                            Url = "https://images.unsplash.com/photo-1603753254932-92e104b4c052"
                        },
                        new
                        {
                            Id = 4,
                            PlaceId = 10,
                            Url = "https://upload.wikimedia.org/wikipedia/commons/4/47/Basaseachi_Chihuahua_M%C3%A9xico_por_Javier_Correa_Zabala_2018._%282%29.jpg"
                        });
                });

            modelBuilder.Entity("MexNature.Api.Entities.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accessible")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElevationMeters")
                        .HasColumnType("int");

                    b.Property<double>("EntryFee")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accessible = true,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Impresionantes cascadas de un intenso color azul turquesa en Chiapas.",
                            ElevationMeters = 200,
                            EntryFee = 70.0,
                            Latitude = 17.258600000000001,
                            Longitude = -92.115799999999993,
                            Name = "Cascadas de Agua Azul",
                            OpeningHours = "08:00-17:30"
                        },
                        new
                        {
                            Id = 2,
                            Accessible = false,
                            Category = "Parque",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Volcán inactivo con dos hermosas lagunas en su cráter (El Sol y La Luna).",
                            ElevationMeters = 4680,
                            EntryFee = 50.0,
                            Latitude = 19.1083,
                            Longitude = -99.758300000000006,
                            Name = "Parque Nacional Nevado de Toluca",
                            OpeningHours = "08:00-15:00"
                        },
                        new
                        {
                            Id = 3,
                            Accessible = true,
                            Category = "Bosque",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Área de Protección de Flora y Fauna en la Zona Metropolitana de Guadalajara.",
                            ElevationMeters = 1600,
                            EntryFee = 40.0,
                            Latitude = 20.666699999999999,
                            Longitude = -103.58329999999999,
                            Name = "Bosque de la Primavera",
                            OpeningHours = "07:00-18:00"
                        },
                        new
                        {
                            Id = 4,
                            Accessible = true,
                            Category = "Cañón",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Imponente cañón con altos acantilados, navegable por el río Grijalva en Chiapas.",
                            ElevationMeters = 1000,
                            EntryFee = 36.0,
                            Latitude = 16.831499999999998,
                            Longitude = -93.093400000000003,
                            Name = "Cañón del Sumidero",
                            OpeningHours = "08:00-16:00"
                        },
                        new
                        {
                            Id = 5,
                            Accessible = true,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cascadas petrificadas en Oaxaca, formadas por agua carbonatada.",
                            ElevationMeters = 1750,
                            EntryFee = 50.0,
                            Latitude = 16.8642,
                            Longitude = -96.273099999999999,
                            Name = "Hierve el Agua",
                            OpeningHours = "07:00-18:30"
                        },
                        new
                        {
                            Id = 6,
                            Accessible = false,
                            Category = "Cueva",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Una de las cuevas verticales más grandes y hermosas del mundo, en San Luis Potosí.",
                            ElevationMeters = 330,
                            EntryFee = 100.0,
                            Latitude = 21.600000000000001,
                            Longitude = -99.0,
                            Name = "Sótano de las Golondrinas",
                            OpeningHours = "06:00-16:00"
                        },
                        new
                        {
                            Id = 7,
                            Accessible = true,
                            Category = "Reserva Natural",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Humedal famoso por sus grandes poblaciones de flamencos rosados en Yucatán.",
                            ElevationMeters = 5,
                            EntryFee = 200.0,
                            Latitude = 20.8583,
                            Longitude = -90.395799999999994,
                            Name = "Reserva de la Biósfera Ría Celestún",
                            OpeningHours = "08:00-17:00"
                        },
                        new
                        {
                            Id = 8,
                            Accessible = false,
                            Category = "Parque",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Parque en Baja California con bosques de coníferas y el Observatorio Astronómico Nacional.",
                            ElevationMeters = 2830,
                            EntryFee = 64.0,
                            Latitude = 30.9953,
                            Longitude = -115.46420000000001,
                            Name = "Parque Nacional Sierra de San Pedro Mártir",
                            OpeningHours = "07:00-20:00"
                        },
                        new
                        {
                            Id = 9,
                            Accessible = true,
                            Category = "Arrecife",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Parte del Gran Arrecife Maya, un destino de clase mundial para el buceo y snorkel.",
                            ElevationMeters = 0,
                            EntryFee = 100.0,
                            Latitude = 20.355599999999999,
                            Longitude = -87.001900000000006,
                            Name = "Parque Nacional Arrecifes de Cozumel",
                            OpeningHours = "09:00-17:00"
                        },
                        new
                        {
                            Id = 10,
                            Accessible = true,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "La cascada permanente más alta de México, ubicada en la Sierra Tarahumara en Chihuahua.",
                            ElevationMeters = 2453,
                            EntryFee = 70.0,
                            Latitude = 28.169699999999999,
                            Longitude = -108.2128,
                            Name = "Cascada de Basaseachi",
                            OpeningHours = "08:00-17:00"
                        });
                });

            modelBuilder.Entity("MexNature.Api.Entities.PlaceAmenity", b =>
                {
                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.HasKey("PlaceId", "AmenityId");

                    b.HasIndex("AmenityId");

                    b.ToTable("PlaceAmenities");

                    b.HasData(
                        new
                        {
                            PlaceId = 1,
                            AmenityId = 1
                        },
                        new
                        {
                            PlaceId = 1,
                            AmenityId = 2
                        },
                        new
                        {
                            PlaceId = 2,
                            AmenityId = 1
                        },
                        new
                        {
                            PlaceId = 4,
                            AmenityId = 3
                        },
                        new
                        {
                            PlaceId = 5,
                            AmenityId = 2
                        });
                });

            modelBuilder.Entity("MexNature.Api.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MexNature.Api.Entities.Trail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DistanceKm")
                        .HasColumnType("float");

                    b.Property<int>("EstimatedTimeMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsLoop")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Trails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Difficulty = "Difícil",
                            DistanceKm = 8.5,
                            EstimatedTimeMinutes = 240,
                            IsLoop = false,
                            Name = "Ascenso al Pico del Fraile",
                            Path = "{}",
                            PlaceId = 2
                        },
                        new
                        {
                            Id = 2,
                            Difficulty = "Fácil",
                            DistanceKm = 4.0,
                            EstimatedTimeMinutes = 120,
                            IsLoop = true,
                            Name = "Miradores del Cañón",
                            Path = "{}",
                            PlaceId = 4
                        },
                        new
                        {
                            Id = 3,
                            Difficulty = "Moderada",
                            DistanceKm = 12.0,
                            EstimatedTimeMinutes = 300,
                            IsLoop = false,
                            Name = "Sendero al Observatorio",
                            Path = "{}",
                            PlaceId = 8
                        },
                        new
                        {
                            Id = 4,
                            Difficulty = "Fácil",
                            DistanceKm = 2.5,
                            EstimatedTimeMinutes = 90,
                            IsLoop = true,
                            Name = "Mirador La Ventana",
                            Path = "{}",
                            PlaceId = 10
                        });
                });

            modelBuilder.Entity("MexNature.Api.Entities.Photo", b =>
                {
                    b.HasOne("MexNature.Api.Entities.Place", "Place")
                        .WithMany("Photos")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("MexNature.Api.Entities.PlaceAmenity", b =>
                {
                    b.HasOne("MexNature.Api.Entities.Amenity", "Amenity")
                        .WithMany("PlaceAmenities")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MexNature.Api.Entities.Place", "Place")
                        .WithMany("PlaceAmenities")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("MexNature.Api.Entities.Review", b =>
                {
                    b.HasOne("MexNature.Api.Entities.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("MexNature.Api.Entities.Trail", b =>
                {
                    b.HasOne("MexNature.Api.Entities.Place", "Place")
                        .WithMany("Trails")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("MexNature.Api.Entities.Amenity", b =>
                {
                    b.Navigation("PlaceAmenities");
                });

            modelBuilder.Entity("MexNature.Api.Entities.Place", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("PlaceAmenities");

                    b.Navigation("Reviews");

                    b.Navigation("Trails");
                });
#pragma warning restore 612, 618
        }
    }
}
